// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Produto {
  id        String   @id @default(uuid()) @db.Char(36)
  nome      String   @unique @db.VarChar(100)
  preco     Decimal  @db.Decimal(10, 2)
  estoque   Int      @db.Int()
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  listasCompras ItemListaCompra[]
  @@map("produtos")
}

model Usuario {
 id String @id @default(uuid()) @db.Char(36)
 nome String @db.VarChar(100)
 email String @unique @db.VarChar(100)
 senha String @db.Char(60)
 tipoUsuario TipoUsuario @relation(fields: [tipoUsuarioId], references: [id])
 tipoUsuarioId String @db.Char(36)
 createdAt DateTime @default(now()) @map("created_at")
 updatedAt DateTime @updatedAt @map("updated_at")
 compras Compra[]
 @@map("usuarios")
}
model TipoUsuario {
 id String @id @default(uuid()) @db.Char(36)
 rotulo String @db.VarChar(10)
 usuarios Usuario[]
 @@map("tipos_usuarios")
}

model Compra {
  id String @id @default(uuid()) @db.Char(36)
  usuario Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String @db.Char(36)
  produtos ItemListaCompra[]
  @@map("itens_carrinho")
}

model ItemListaCompra {
  listaCompra Compra @relation(fields: [listaCompraId], references: [id])
  listaCompraId String @db.Char(36)
  produto Produto @relation(fields: [produtoId], references: [id])
  produtoId String  @db.Char(36)
  quantidade Int @db.Int()
  @@id([produtoId, listaCompraId])
  @@map("item_lista_compra")
}